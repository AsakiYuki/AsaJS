import { JsonUIElement } from "./Element"
import { DefaultGlobalVariableTypes } from "./GlobalVariablesTypes"

export type JsonUIArrayName = "controls" | "bindings" | "button_mappings" | "variables";

export enum ElementTypes {
    Panel = "panel",
    StackPanel = "stack_panel",
    CollectionPanel = "collection_panel",
    InputPanel = "input_panel",
    Grid = "grid",
    Button = "button",
    Toggle = "toggle",
    Label = "label",
    Image = "image",
    Dropdown = "dropdown",
    Slider = "slider",
    SliderBox = "slider_box",
    EditBox = "edit_box",
    ScrollView = "scroll_view",
    ScrollbarTrack = "scrollbar_track",
    ScrollbarBox = "scrollbar_box",
    Factory = "factory",
    Screen = "screen",
    Custom = "custom",
    SelectionWheel = "selection_wheel"
}

export enum AnimTypes {
    Alpha = "alpha",
    Clip = "clip",
    Color = "color",
    FlipBook = "flip_book",
    Offset = "offset",
    Size = "size",
    Uv = "uv",
    Wait = "wait",
    AsepriteFlipBook = "aseprite_flip_book"
}

export enum Anchor {
    TopLeft = "top_left",
    TopMiddle = "top_middle",
    TopRight = "top_right",
    LeftMiddle = "left_middle",
    Center = "center",
    RightMiddle = "right_middle",
    BottomLeft = "bottom_left",
    BottomMiddle = "bottom_middle",
    BottomRight = "bottom_right"
}

export enum EasingTypes {
    Linear = "linear",
    Spring = "spring",
    InQuad = "in_quad",
    OutQuad = "out_quad",
    InOutQuad = "in_out_quad",
    InCuic = "in_cubic",
    OutCubic = "out_cubic",
    InOutCubic = "in_out_cubic",
    InQuart = "in_quart",
    OutQuart = "out_quart",
    InOutQuart = "in_out_quart",
    InQuint = "in_quint",
    OutQuint = "out_quint",
    InOutQuint = "in_out_quint",
    InSine = "in_sine",
    OutSine = "out_sine",
    InOutSine = "in_out_sine",
    InExpo = "in_expo",
    OutExpo = "out_expo",
    InOutExpo = "in_out_expo",
    InCirc = "in_circ",
    OutCirc = "out_circ",
    InOutCirc = "in_out_circ",
    InBounce = "in_bounce",
    OutBounce = "out_bounce",
    InOutBounce = "in_out_bounce",
    InBack = "in_back",
    OutBack = "out_back",
    InOutBack = "in_out_back",
    InElastic = "in_elastic",
    OutElastic = "out_elastic",
    InOutElastic = "in_out_elastic"
}

export interface AnimationData {
    duration: number | DefaultGlobalVariableTypes,
    destroy_at_end?: string | DefaultGlobalVariableTypes,
    easing?: EasingTypes,
    set_value: any | DefaultGlobalVariableTypes,
    override_from_value?: any,
    initial_uv?: [number, number],
    fps?: number,
    frame_count?: number,
    frame_step?: number,
    reversible?: boolean,
    resettable?: boolean,
    scale_from_starting_alpha?: boolean,
    activated?: boolean
}

export interface AnimationInterface {
    type: AnimTypes,
    name?: string,
    namespace?: string,
    start_value: any,
    loop?: boolean,
    play_event?: string,
    end_event?: string,
    start_event?: string,
    reset_event?: string,
    data: (AnimationData | number)[]
}

export interface ExtendInterface {
    name: string,
    namespace: string
}

export interface ElementInterface {
    type?: ElementTypes,
    name?: string,
    namespace?: string,
    extend?: JsonUIElement | ExtendInterface
}

export interface ElementCachedInterface {
    name?: string,
    namespace?: string,
    type?: string | ElementTypes,
    extend?: {
        name: string,
        namespace: string,
    }
}

export interface ElementVariables {
    require: string | boolean,
    value: any
}

export interface BindingInterface {
    ignored?: boolean | string,
    binding_type?: 'global' | 'view' | 'collection' | 'collection_details' | 'none',
    binding_name?: string,
    binding_name_override?: string,
    binding_collection_name?: Collection | string,
    binding_collection_prefix?: string,
    binding_condition?: 'always' | 'always_when_visible' | 'visible' | 'once' | 'none' | 'visibility_changed',
    source_control_name?: JsonUIElement | string,
    source_property_name?: string,
    target_property_name?: string,
    resolve_sibling_scope?: boolean | string
}

export interface ChildrenID {
    [key: string]: number
}

export interface RegisterResourcePack {
    version?: [number, number, number],
    uuid?: string,
    pack_name: string,
    description?: string,
    min_version?: [number, number, number]
}

export type Bool = boolean | string;
export type Num = number | string;

export type LanguageFile = "bg_BG" | "cs_CZ" | "da_DK" | "de_DE" | "el_GR" | "en_GB" | "en_US" | "es_ES" | "es_MX" | "fi_FI" | "fr_CA" | "fr_FR" | "hu_HU" | "id_ID" | "it_IT" | "ja_JP" | "ko_KR" | "nb_NO" | "nl_NL" | "pl_PL" | "pt_BR" | "pt_PT" | "ru_RU" | "sk_SK" | "sv_SE" | "tr_TR" | "uk_UA" | "zh_CN" | "zh_TW";

export type LanguageInterface = {
    lang: {
        [key: string]: {
            [key in LanguageFile]?: string
        }
    }
}
export type LanguageCustomInterface = {
    lang: {
        [key: string]: {
            [key: string]: string
        }
    }
}

export type ArrayProperty = [string | LanguageInterface | LanguageCustomInterface];

export type Vector2 = [number, number] | string;
export type Vector2_str = [number | string, number | string] | string;
export type Vector3 = [number, number, number] | string;
export type Vector4 = [number, number, number, number] | string;
export type ArrString = string[] | string;
export type Obj = Object | string;

export enum Renderer {
    HoverText = "hover_text_renderer",
    Structure3D = "3d_structure_renderer",
    SplashText = "splash_text_renderer",
    UIHoloCursor = "ui_holo_cursor",
    TrialTime = "trial_time_renderer",
    Panorama = "panorama_renderer",
    ActorPortrain = "actor_portrait_renderer",
    BannerPattern = "banner_pattern_renderer",
    LivePlayer = "live_player_renderer",
    WebView = "web_view_renderer",
    Hunger = "hunger_renderer",
    Bubbles = "bubbles_renderer",
    MobEffects = "mob_effects_renderer",
    Curson = "cursor_renderer",
    ProgressIndicator = "progress_indicator_renderer",
    Camera = "camera_renderer",
    HorseJump = "horse_jump_renderer",
    Armor = "armor_renderer",
    HorseHeart = "horse_heart_renderer",
    Heart = "heart_renderer",
    HotbarCooldown = "hotbar_cooldown_renderer",
    Hotbar = "hotbar_renderer",
    HudPlayer = "hud_player_renderer",
    LiveHorse = "live_horse_renderer",
    HolographucPost = "holographic_postrenderer",
    EnchantingBook = "enchanting_book_renderer",
    DebugScreen = "debug_screen_renderer",
    Gradient = "gradient_renderer",
    PaperDoll = "paper_doll_renderer",
    NameTag = "name_tag_renderer",
    FlyingItem = "flying_item_renderer",
    InventoryItem = "inventory_item_renderer",
    Credits = "credits_renderer",
    Vignette = "vignette_renderer",
    ProgressBar = "progress_bar_renderer",
    DebugOverlay = "debug_overlay_renderer",
    Background = "background_renderer",
    BohrModel = "bohr_model_renderer"
}

export enum RotationAuto {
    Auto = "auto",
    GestureX = "gesture_x",
    CustomY = "custom_y"
}

export enum TextType {
    ExtendedASCII = "ExtendedASCII",
    IdentifierChars = "IdentifierChars",
    NumberChars = "NumberChars"
}

export interface SoundObject {
    sound_name?: string,
    sound_volume?: Num,
    sound_pitch?: Num,
    min_seconds_between_plays?: Num,
}

export enum FocusNavigationMode {
    None = "none",
    Stop = "stop",
    Custom = "custom",
    Contained = "contained"
}

export interface FocusContainerCustom {
    other_focus_container_name?: string,
    focus_id_inside?: string
}

export enum ClipDirection {
    Left = "left",
    Right = "right",
    Up = "up",
    Down = "down",
    Center = "center"
}

export enum TextureFileSystem {
    InUserPackage = "InUserPackage",
    InAppPackage = "InAppPackage",
    RawPath = "RawPath",
    RawPersistent = "RawPersistent",
    InSettingsDir = "InSettingsDir",
    InExternalDir = "InExternalDir",
    InServerPackage = "InServerPackage",
    InDataDir = "InDataDir",
    InUserDir = "InUserDir",
    InWorldDir = "InWorldDir",
    StoreCache = "StoreCache"
}

export enum FontSize {
    Small = "small",
    Normal = "normal",
    Large = "large",
    ExtraLarge = "extra_large"
}

export enum FontType {
    Default = "default",
    Rune = "rune",
    Unicode = "unicode",
    Smooth = "smooth",
    MinecraftTen = "MinecraftTen"
}

export enum Orientation {
    Vertical = "vertical",
    Horizontal = "horizontal"
}

export enum Direction {
    Vertical = "vertical",
    Horizontal = "horizontal",
    Both = "both"
}

export interface JsonUIProperty {
    visible?: ArrayProperty | Bool,
    enabled?: ArrayProperty | Bool,
    layer?: ArrayProperty | Num,
    alpha?: ArrayProperty | Num,
    propagate_alpha?: ArrayProperty | Bool,
    clips_children?: ArrayProperty | Bool,
    allow_clipping?: ArrayProperty | Bool,
    clip_offset?: ArrayProperty | Vector2,
    clip_state_change_event?: ArrayProperty | string,
    enable_scissor_test?: ArrayProperty | Bool,
    property_bag?: ArrayProperty | Obj,
    selected?: ArrayProperty | Bool,
    use_child_anchors?: ArrayProperty | Bool,
    disable_anim_fast_forward?: ArrayProperty | Bool,
    animation_reset_name?: ArrayProperty | string,
    ignored?: ArrayProperty | Bool,
    grid_position?: ArrayProperty | Vector2,
    collection_index?: ArrayProperty | Num,
    size?: ArrayProperty | Vector2_str,
    max_size?: ArrayProperty | Vector2_str,
    min_size?: ArrayProperty | Vector2_str,
    offset?: ArrayProperty | Vector2_str,
    anchor_from?: ArrayProperty | Anchor,
    anchor_to?: ArrayProperty | Anchor,
    inherit_max_sibling_width?: ArrayProperty | Bool,
    inherit_max_sibling_height?: ArrayProperty | Bool,
    use_anchored_offset?: ArrayProperty | Bool,
    contained?: ArrayProperty | Bool,
    draggable?: ArrayProperty | Direction,
    follows_cursor?: ArrayProperty | Bool,
    grid_dimensions?: ArrayProperty | Vector2,
    maximum_grid_items?: ArrayProperty | Num,
    grid_dimension_binding?: ArrayProperty | string,
    grid_rescaling_type?: ArrayProperty | Direction,
    grid_fill_direction?: ArrayProperty | Direction,
    grid_item_template?: ArrayProperty | string,
    precached_grid_item_count?: ArrayProperty | Num,
    text?: ArrayProperty | string,
    color?: ArrayProperty | Vector3,
    locked_color?: ArrayProperty | Vector3,
    shadow?: ArrayProperty | Bool,
    hide_hyphen?: ArrayProperty | Bool,
    notify_on_ellipses?: ArrayProperty | ArrString,
    enable_profanity_filter?: ArrayProperty | Bool,
    locked_alpha?: ArrayProperty | Num,
    font_scale_factor?: ArrayProperty | Num,
    localize?: ArrayProperty | Bool,
    line_padding?: ArrayProperty | Num,
    font_size?: ArrayProperty | FontSize | string,
    backup_font_type?: ArrayProperty | FontType | string,
    text_alignment?: ArrayProperty | Anchor | string,
    texture?: ArrayProperty | string,
    allow_debug_missing_texture?: ArrayProperty | Bool,
    uv?: ArrayProperty | Vector2,
    uv_size?: ArrayProperty | Vector2,
    texture_file_system?: ArrayProperty | TextureFileSystem,
    nineslice_size?: ArrayProperty | Vector2 | Vector4 | Num,
    tiled?: ArrayProperty | Bool | Vector2,
    tiled_scale?: ArrayProperty | Vector2,
    clip_direction?: ArrayProperty | ClipDirection,
    clip_ratio?: ArrayProperty | Num,
    clip_pixelperfect?: ArrayProperty | Bool,
    keep_ratio?: ArrayProperty | Bool,
    bilinear?: ArrayProperty | Bool,
    fill?: ArrayProperty | Bool,
    "$fit_to_width"?: ArrayProperty | Bool,
    zip_folder?: ArrayProperty | string,
    grayscale?: ArrayProperty | Bool,
    force_texture_reload?: ArrayProperty | Bool,
    base_size?: ArrayProperty | Vector2,
    modal?: ArrayProperty | Bool,
    inline_modal?: ArrayProperty | Bool,
    always_listen_to_input?: ArrayProperty | Bool,
    always_handle_pointer?: ArrayProperty | Bool,
    always_handle_controller_direction?: ArrayProperty | Bool,
    hover_enabled?: ArrayProperty | Bool,
    prevent_touch_input?: ArrayProperty | Bool,
    consume_event?: ArrayProperty | Bool,
    consume_hover_events?: ArrayProperty | Bool,
    gesture_tracking_button?: ArrayProperty | Bool,
    default_focus_precedence?: ArrayProperty | Num,
    focus_enabled?: ArrayProperty | Bool,
    focus_wrap_enabled?: ArrayProperty | Bool,
    focus_magnet_enabled?: ArrayProperty | Bool,
    focus_identifier?: ArrayProperty | string,
    focus_change_down?: ArrayProperty | string,
    focus_change_up?: ArrayProperty | string,
    focus_change_left?: ArrayProperty | string,
    focus_change_right?: ArrayProperty | string,
    focus_mapping?: ArrayProperty | any[] | string,
    focus_container?: ArrayProperty | Bool,
    use_last_focus?: ArrayProperty | Bool,
    focus_navigation_mode_left?: ArrayProperty | FocusNavigationMode | string,
    focus_navigation_mode_right?: ArrayProperty | FocusNavigationMode | string,
    focus_navigation_mode_down?: ArrayProperty | FocusNavigationMode | string,
    focus_navigation_mode_up?: ArrayProperty | FocusNavigationMode | string,
    focus_container_custom_left?: ArrayProperty | FocusContainerCustom[] | string,
    focus_container_custom_right?: ArrayProperty | FocusContainerCustom[] | string,
    focus_container_custom_down?: ArrayProperty | FocusContainerCustom[] | string,
    focus_container_custom_up?: ArrayProperty | FocusContainerCustom[] | string,
    default_control?: ArrayProperty | string,
    hover_control?: ArrayProperty | string,
    pressed_control?: ArrayProperty | string,
    locked_control?: ArrayProperty | string,
    radio_toggle_group?: ArrayProperty | Bool,
    toggle_name?: ArrayProperty | string,
    toggle_default_state?: ArrayProperty | Bool,
    toggle_group_forced_index?: ArrayProperty | Num,
    toggle_group_default_selected?: ArrayProperty | Num,
    reset_on_focus_lost?: ArrayProperty | Bool,
    toggle_on_hover?: ArrayProperty | string,
    toggle_on_button?: ArrayProperty | string,
    toggle_off_button?: ArrayProperty | string,
    enable_directional_toggling?: ArrayProperty | Bool,
    toggle_grid_collection_name?: ArrayProperty | string,
    unchecked_control?: ArrayProperty | string,
    checked_control?: ArrayProperty | string,
    unchecked_hover_control?: ArrayProperty | string
    checked_hover_control?: ArrayProperty | string
    unchecked_locked_control?: ArrayProperty | string,
    checked_locked_control?: ArrayProperty | string,
    unchecked_locked_hover_control?: ArrayProperty | string,
    checked_locked_hover_control?: ArrayProperty | string,
    dropdown_name?: ArrayProperty | string,
    dropdown_content_control?: ArrayProperty | string,
    dropdown_area?: ArrayProperty | string,
    sound_name?: ArrayProperty | string,
    sound_volume?: ArrayProperty | Num,
    sound_pitch?: ArrayProperty | Num,
    sounds?: ArrayProperty | SoundObject[] | string,
    collection?: ArrayProperty | Collection | string,
    collection_name?: ArrayProperty | Collection | string,
    text_box_name?: ArrayProperty | string,
    text_edit_box_grid_collection_name?: ArrayProperty | string,
    constrain_to_rect?: ArrayProperty | Bool,
    enabled_newline?: ArrayProperty | Bool,
    text_type?: ArrayProperty | TextType,
    max_length?: ArrayProperty | Num,
    text_control?: ArrayProperty | string,
    place_holder_control?: ArrayProperty | string,
    can_be_deselected?: ArrayProperty | Bool,
    always_listening?: ArrayProperty | Bool,
    virtual_keyboard_buffer_control?: ArrayProperty | string,
    slider_track_button?: ArrayProperty | string,
    slider_small_decrease_button?: ArrayProperty | string,
    slider_small_increase_button?: ArrayProperty | string,
    slider_steps?: ArrayProperty | Num,
    slider_direction?: ArrayProperty | Orientation,
    slider_timeout?: ArrayProperty | Num,
    slider_collection_name?: ArrayProperty | string,
    slider_name?: ArrayProperty | string,
    slider_select_on_hover?: ArrayProperty | Bool,
    slider_selected_button?: ArrayProperty | string,
    slider_deselected_button?: ArrayProperty | string,
    slider_box_control?: ArrayProperty | string,
    background_control?: ArrayProperty | string,
    background_hover_control?: ArrayProperty | string,
    progress_control?: ArrayProperty | string,
    progress_hover_control?: ArrayProperty | string,
    scrollbar_track_button?: ArrayProperty | string,
    scrollbar_touch_button?: ArrayProperty | string,
    scroll_speed?: ArrayProperty | Num,
    gesture_control_enabled?: ArrayProperty | Bool,
    always_handle_scrolling?: ArrayProperty | Bool,
    touch_mode?: ArrayProperty | Bool,
    scrollbar_box?: ArrayProperty | string,
    scrollbar_track?: ArrayProperty | string,
    scroll_view_port?: ArrayProperty | string,
    scroll_content?: ArrayProperty | string,
    scroll_box_and_track_panel?: ArrayProperty | string,
    jump_to_bottom_on_update?: ArrayProperty | Bool,
    renderer?: ArrayProperty | Renderer | string,
    gradient_direction?: ArrayProperty | Orientation | string,
    color1?: ArrayProperty | Vector4,
    color2?: ArrayProperty | Vector4,
    text_color?: ArrayProperty | Vector4,
    background_color?: ArrayProperty | Vector4,
    primary_color?: ArrayProperty | Vector4,
    secondary_color?: ArrayProperty | Vector4,
    camera_tilt_degrees?: ArrayProperty | Num,
    starting_rotation?: ArrayProperty | Num,
    use_selected_skin?: ArrayProperty | Bool,
    use_uuid?: ArrayProperty | Bool,
    use_skin_gui_scale?: ArrayProperty | Bool,
    use_player_paperdoll?: ArrayProperty | Bool,
    rotation?: ArrayProperty | RotationAuto | string,
    end_event?: ArrayProperty | string,
    render_only_when_topmost?: ArrayProperty | Bool,
    screen_not_flushable?: ArrayProperty | Bool,
    always_accepts_input?: ArrayProperty | Bool,
    render_game_behind?: ArrayProperty | Bool,
    absorbs_input?: ArrayProperty | Bool,
    is_showing_menu?: ArrayProperty | Bool,
    is_modal?: ArrayProperty | Bool,
    should_steal_mouse?: ArrayProperty | Bool,
    low_frequency_rendering?: ArrayProperty | Bool,
    screen_draws_last?: ArrayProperty | Bool,
    vr_mode?: ArrayProperty | Bool,
    force_render_below?: ArrayProperty | Bool,
    send_telemetry?: ArrayProperty | Bool,
    close_on_player_hurt?: ArrayProperty | Bool,
    cache_screen?: ArrayProperty | Bool,
    load_screen_immediately?: ArrayProperty | Bool,
    gamepad_cursor?: ArrayProperty | Bool,
    gamepad_cursor_deflection_mode?: ArrayProperty | Bool,
    should_be_skipped_during_automation?: ArrayProperty | Bool,
    inner_radius?: ArrayProperty | Num,
    outer_radius?: ArrayProperty | Num,
    state_controls?: ArrayProperty | ArrString,
    slice_count?: ArrayProperty | Num,
    button_name?: ArrayProperty | string,
    iterate_left_button_name?: ArrayProperty | string,
    iterate_right_button_name?: ArrayProperty | string,
    initial_button_slice?: ArrayProperty | Num,
    tts_name?: ArrayProperty | string,
    tts_control_header?: ArrayProperty | string,
    tts_section_header?: ArrayProperty | string,
    tts_control_type_order_priority?: ArrayProperty | Num,
    tts_index_priority?: ArrayProperty | Num,
    tts_toggle_on?: ArrayProperty | string,
    tts_toggle_off?: ArrayProperty | string,
    tts_override_control_value?: ArrayProperty | string,
    tts_inherit_siblings?: ArrayProperty | Bool,
    tts_value_changed?: ArrayProperty | string,
    ttsSectionContainer?: ArrayProperty | Bool,
    tts_ignore_count?: ArrayProperty | Bool,
    tts_skip_message?: ArrayProperty | Bool,
    tts_value_order_priority?: ArrayProperty | Num,
    tts_play_on_unchanged_focus_control?: ArrayProperty | Bool,
    tts_ignore_subsections?: ArrayProperty | Bool,
    text_tts?: ArrayProperty | string,
    use_priority?: ArrayProperty | Bool,
    priority?: ArrayProperty | Bool,
    [key: string]: ArrayProperty | any
}

export interface ElementUIInterface {
    [key: string]: JsonUIProperty
}

export interface ButtonMapping {
    ignored?: Bool,
    from_button_id?: FromKeybind | string,
    to_button_id?: ToKeybind | string,
    mapping_type?: MappingType | string,
    scope?: Scope | string,
    input_mode_condition?: InputModeCondition | string,
    ignore_input_scope?: Bool,
    consume_event?: Bool,
    handle_select?: Bool,
    handle_deselect?: Bool,
    button_up_right_of_first_refusal?: Bool
}

export enum MappingType {
    Global = "global",
    Pressed = "pressed",
    DoublePressed = "double_pressed",
    Focused = "forcused"
}

export enum Scope {
    View = "view",
    Controller = "controller"
}

export enum InputModeCondition {
    NotGaze = "not_gaze",
    NotGamepad = "not_gamepad",
    GamePadNadNotGaze = "gamepad_and_not_gaze"
}

export enum FromKeybind {
    MenuExit = "button.menu_exit",
    MenuCancel = "button.menu_cancel",
    MenuInventoryCancel = "button.menu_inventory_cancel ",
    MenuOk = "button.menu_ok",
    MenuSelect = "button.menu_select",
    ControllerSelect = "button.controller_select",
    MenuSecondarySelect = "button.menu_secondary_select",
    ControllerSecondarySelect = "button.controller_secondary_select",
    ControllerSecondarySelectLeft = "button.controller_secondary_select_left",
    ControllerSecondarySelectRight = "button.controller_secondary_select_right",
    ControllerStart = "button.controller_start",
    MenuUp = "button.menu_up",
    MenuDown = "button.menu_down",
    MenuLeft = "button.menu_left",
    MenuRight = "button.menu_right",
    MenuTabLeft = "button.menu_tab_left",
    MenuTabRight = "button.menu_tab_right",
    MenuAlternateTabLeft = "button.menu_alternate_tab_left",
    MenuAlternateTabRight = "button.menu_alternate_tab_right",
    MenuAutocomplete = "button.menu_autocomplete",
    MenuAutocompleteBack = "button.menu_autocomplete_back",
    ControllerAutocomplete = "button.controller_autocomplete",
    ControllerAutocompleteBack = "button.controller_autocomplete_back",
    MenuEditUp = "button.menu_textedit_up",
    MenuEditDown = "button.menu_textedit_down",
    ControllerEditUp = "button.controller_textedit_u",
    ControllerEditDown = "button.controller_textedit_down",
    MenuAutoPlace = "button.menu_auto_place",
    MenuInventoryDrop = "button.menu_inventory_drop",
    MenuInventoryDropAll = "button.menu_inventory_drop_all",
    MenuClear = "button.menu_clear",
    Chat = "button.chat",
    MobEffects = "button.mobeffects",
    keyEmote = "key.emote",
    Slot0 = "button.slot0",
    Slot1 = "button.slot1",
    Slot2 = "button.slot2",
    Slot3 = "button.slot3",
    Slot4 = "button.slot4",
    Slot5 = "button.slot5",
    Slot6 = "button.slot6",
    Slot7 = "button.slot7",
    Slot8 = "button.slot8",
    Slot9 = "button.slot9",
    InventoryRight = "button.inventory_right",
    InventoryLeft = "button.inventory_left",
    Scoreboard = "button.scoreboard",
    HideGui = "button.hide_gui",
    HideTooltips = "button.hide_tooltips",
    HidePaperdoll = "button.hide_paperdoll",
    MenuVRRealign = "button.menu_vr_realign"
}

export enum ToKeybind {
    OpenContentLogHistory = "button.open_content_log_history",
    ClearContentLogFiles = "button.clear_content_log_files",
    ClearMsaTokenButton = "button.clear_msa_token_button",
    TermsAndConditionsPopup = "button.terms_and_conditions_popup",
    Credits = "button.credits",
    UnlinkMsa = "button.unlink_msa",
    AttributePopup = "button.attribute_popup",
    LicensedContent = "button.licensed_content",
    FontLicense = "button.font_license",
    TosHyperlink = "button.tos_hyperlink",
    PrivpolHyperlink = "button.privpol_hyperlink",
    TosPopup = "button.tos_popup",
    PrivpolPopup = "button.privpol_popup",
    BindingButton = "button.binding_button",
    ResetBinding = "button.reset_binding",
    ResetKeyboardBindings = "button.reset_keyboard_bindings",
    ViewAccountErrors = "button.view_account_errors",
    PrevPage = "button.prev_page",
    NextPage = "button.next_page",
    BookExit = "button.book_exit",
    Send = "button.send",
    ChatAutocomplete = "button.chat_autocomplete",
    ChatAutocompleteBack = "button.chat_autocomplete_back",
    ChatPreviousMessage = "button.chat_previous_message",
    ChatNextMessage = "button.chat_next_message",
    commandBlockInputMinimize = "command_block.input_minimize",
    CommentOptionsClose = "button.comment_options_close",
    CommentFeedOptionsClose = "button.comment_feed_options_close",
    CloseComments = "button.close_comments",
    CommentNextButton = "button.comment_next_button",
    CommentPrevButton = "button.comment_prev_button",
    ShowSkip = "button.show_skip",
    RespawnButton = "button.respawn_button",
    MainMenuButton = "button.main_menu_button",
    RebindMode = "button.rebind_mode",
    DressingRoom = "button.dressing_room",
    EmoteSelected = "button.emote_selected",
    SelectEmoteSlot0 = "button.select_emote_slot_0",
    SelectEmoteSlot1 = "button.select_emote_slot_1",
    SelectEmoteSlot2 = "button.select_emote_slot_2",
    SelectEmoteSlot3 = "button.select_emote_slot_3",
    SelectEmoteSlot4 = "button.select_emote_slot_4",
    SelectEmoteSlot5 = "button.select_emote_slot_5",
    IterateSelectionLeft = "button.iterate_selection_left",
    IterateSelectionRight = "button.iterate_selection_right",
    FeedImage = "button.feed_image",
    NewPost = "button.newpost",
    AddScreenshot = "button.add_screenshot",
    FeedComment = "button.feed_comment",
    FeedPrevButton = "button.feed_prev_button",
    FeedNextButton = "button.feed_next_button",
    FeedNewPostClose = "button.feed_new_post_close",
    FeedOptionsClose = "button.feed_options_close",
    CloseFeed = "button.close_feed",
    ToProfileOrSkinsScreen = "button.to_profile_or_skins_screen",
    PlayerProfileCard = "button.player_profile_card",
    MenuContinue = "button.menu_continue",
    MenuServerStore = "button.menu_server_store",
    Screenshot = "button.screenshot",
    MenuHowToPlay = "button.menu_how_to_play",
    MenuPermission = "button.menu_permission",
    MenuInvitePlayers = "button.menu_invite_players",
    MenuQuit = "button.menu_quit",
    MenuFeed = "button.menu_feed",
    PauseFocusFiller = "button.pause_focus_filler",
    WakeUpButton = "button.wake_up_button",
    AddFriend = "button.add_friend",
    AddMember = "button.add_member",
    SendInvites = "button.send_invites",
    ManageFeedPrevButton = "button.manage_feed_prev_button",
    ManageFeedNextButton = "button.manage_feed_next_button",
    ManageFeedIgnore = "button.manage_feed_ignore",
    ManageFeedDelete = "button.manage_feed_delete",
    CloseManageFeed = "button.close_manage_feed",
    AnvilTakeAllPlaceAll = "button.anvil_take_all_place_all",
    AnvilCoalesceStack = "button.anvil_coalesce_stack",
    PlayButtonTarget = "$play_button_target", CartographyResultTakeAllPlaceAll = "button.cartography_result_take_all_place_all",
    Enchant = "button.enchant",
    GrindstoneTakeAllPlaceAll = "button.grindstone_take_all_place_all",
    GrindstoneCoalesceStack = "button.grindstone_coalesce_stack",
    LoomResultTakeAllPlaceAll = "button.loom_result_take_all_place_all",
    PatternSelect = "button.pattern_select",
    CycleRecipeLeft = "button.cycle_recipe_left",
    CycleRecipeRight = "button.cycle_recipe_right",
    TradeTakeAllPlaceAll = "button.trade_take_all_place_all",
    TradeTakeHalfPlaceOne = "button.trade_take_half_place_one",
    TradeCoalesceStack = "button.trade_coalesce_stack",
    MenuSignInToViewRealms = "button.menu_sign_in_to_view_realms",
    MenuRealmsWorldItemEdit = "button.menu_realms_world_item_edit",
    MenuRealmsFeed = "button.menu_realms_feed",
    MenuRealmsWorldItemRemove = "button.menu_realms_world_item_remove",
    MenuNetworkWorldItem = "button.menu_network_world_item",
    MenuNetworkServerWorldEdit = "button.menu_network_server_world_edit",
    ConnectToThirdPartyServer = "button.connect_to_third_party_server",
    ViewThirdPartyServerOffers = "button.view_third_party_server_offers",
    DescriptionReadToggle = "button.description_read_toggle",
    NewsReadToggle = "button.news_read_toggle",
    LocalWorldUpload = "button.local_world_upload",
    MenuStartLocalWorld = "button.menu_start_local_world",
    ConvertLegacyWorld = "button.convert_legacy_world",
    MenuLocalWorldItemEdit = "button.menu_local_world_item_edit",
    MenuLegacyWorldItemDelete = "button.menu_legacy_world_item_delete",
    ImportBetaRetailLocalWorld = "button.import_beta_retail_local_world",
    ImportBetaRetailLegacyWorld = "button.import_beta_retail_legacy_world",
    MenuNetworkAddFriend = "button.menu_network_add_friend",
    MenuNetworkJoinByCode = "button.menu_network_join_by_code",
    MenuQuickPlay = "button.menu_quick_play",
    NewWorldUpload = "button.new_world_upload",
    MenuLocalWorldCreate = "button.menu_local_world_create",
    CreateOnRealmsButton = "button.create_on_realms_button",
    ArchivedWorldUpload = "button.archived_world_upload",
    MenuImportLevel = "button.menu_import_level",
    MenuSyncLegacyWorlds = "button.menu_sync_legacy_worlds",
    RealmsWarningMoreInfo = "button.realms_warning_more_info",
    MenuRealmWorldTrial = "button.menu_realm_world_trial",
    MenuRealmNintendoFirstRealmPurchaseButton = "button.menu_realm_nintendo_first_realm_purchase_button",
    NoLocalWorldsLaunchHelp = "button.no_local_worlds_launch_help",
    MenuNetworkJoinByCodePopupJoin = "button.menu_network_join_by_code_popup_join",
    JoinServerAnyway = "button.join_server_anyway",
    CancelJoinServer = "button.cancel_join_server",
    TryMenuExit = "button.try_menu_exit",
    CloseDialog = "button.close_dialog",
    MenuPlay = "button.menu_play",
    MenuStore = "button.menu_store",
    MenuAchievements = "button.menu_achievements",
    MenuSettings = "button.menu_settings",
    Signin = "button.signin",
    MenuSkins = "button.menu_skins",
    ToProfileScreen = "button.to_profile_screen",
    MenuCourses = "button.menu_courses",
    MenuTutorial = "button.menu_tutorial",
    FeaturedWorld = "button.featured_world",
    SwitchAccounts = "button.switch_accounts",
    LaunchEditions = "button.launch_editions",
    EduFeedback = "button.edu_feedback",
    EduResources = "button.edu_resources",
    MenuBuyGame = "button.menu_buy_game",
    MenuInviteNotification = "button.menu_invite_notification",
    Search = "button.search",
    HotbarInventoryButton = "button.hotbar_inventory_button",
    SelectOffer = "button.select_offer",
    ActionButton = "button.action_button",
    CreateRealm = "button.create_realm",
    HotbarSelect = "button.hotbar_select",
    HotbarOk = "button.hotbar_ok",
    SlotPressed = "button.slot_pressed",
    HotbarInventoryLeft = "button.hotbar_inventory_left",
    HotbarInventoryRight = "button.hotbar_inventory_right",
    HideGuiAll = "button.hide_gui_all",
    HideTooltipsHud = "button.hide_tooltips_hud",
    HidePaperdollHud = "button.hide_paperdoll_hud",
    Slot1 = "button.slot_1",
    Slot2 = "button.slot_2",
    Slot3 = "button.slot_3",
    Slot4 = "button.slot_4",
    Slot5 = "button.slot_5",
    Slot6 = "button.slot_6",
    Slot7 = "button.slot_7",
    Slot8 = "button.slot_8",
    Slot9 = "button.slot_9",
    Slot0 = "button.slot_0",
    Chat = "button.chat",
    ViewSkin = "button.view_skin",
    DeleteAction = "button.delete_action",
    ExitStudent = "button.exit_student",
    PlayVideo = "button.play_video",
    MenuStoreError = "button.menu_store_error",
    LeftPanelTabIncrement = "button.left_panel_tab_increment",
    LeftPanelTabDecrement = "button.left_panel_tab_decrement",
    RightPanelTabIncrement = "button.right_panel_tab_increment",
    RightPanelTabDecrement = "button.right_panel_tab_decrement",
    LayoutIncrement = "button.layout_increment",
    LayoutDecrement = "button.layout_decrement",
    IsHovered = "button.is_hovered",
    ContainerTakeAllPlaceAll = "button.container_take_all_place_all",
    ContainerTakeHalfPlaceOne = "button.container_take_half_place_one",
    ContainerAutoPlace = "button.container_auto_place",
    CoalesceStack = "button.coalesce_stack",
    ShapeDrawing = "button.shape_drawing",
    DestroySelection = "button.destroy_selection",
    ClearSelectedRecipe = "button.clear_selected_recipe",
    ClearHotbarOrRemoveOne = "button.clear_hotbar_or_remove_one",
    ClearHotbarOrDrop = "button.clear_hotbar_or_drop",
    ContainerResetHeld = "button.container_reset_held",
    ContainerSlotHovered = "button.container_slot_hovered",
    ButtonHovered = "button.button_hovered",
    ShiftPaneFocus = "button.shift_pane_focus",
    FocusLeft = "button.focus_left",
    FocusRight = "button.focus_right",
    FilterToggleHovered = "button.filter_toggle_hovered",
    DropOne = "button.drop_one",
    CursorDropOne = "button.cursor_drop_one",
    DropAll = "button.drop_all",
    CursorDropAll = "button.cursor_drop_all",
    SearchBarClear = "button.search_bar_clear",
    SearchBarSelected = "button.search_bar_selected",
    SearchBarDeselected = "button.search_bar_deselected",
    MenuLeaveScreen = "button.menu_leave_screen",
    TurnDoll = "button.turn_doll",
    SelectSkin = "button.select_skin",
    SkinHovered = "button.skin_hovered",
    SkinUnhovered = "button.skin_unhovered",
    Leave = "button.leave",
    LeaveOnDevice = "button.leave_on_device",
    TextEditBoxSelected = "button.text_edit_box_selected",
    TextEditBoxDeselected = "button.text_edit_box_deselected",
    TextEditBoxHovered = "button.text_edit_box_hovered",
    TextEditBoxClear = "button.text_edit_box_clear",
    Help = "button.help",
    MenuOpenUri = "button.menu_open_uri",
    NoInteraction = "button.no_interaction",
    CopyToClipboard = "button.copy_to_clipboard",
    userConfirmDialogEscape = "user_confirm_dialog.escape",
    userConfirmDialogLeftButton = "user_confirm_dialog.left_button",
    userConfirmDialogMiddleButton = "user_confirm_dialog.middle_button",
    userConfirmDialogRightCancelButton = "user_confirm_dialog.rightcancel_button",
}

export enum Collection {
    BookPages = "book_pages",
    PickCollection = "pick_collection",
    OwnedList = "owned_list",
    UnownedList = "unowned_list",
    AutoComplete = "auto_complete",
    FontColors = "font_colors",
    HostMainCollection = "host_main_collection",
    PlayersCollection = "players_collection",
    HostTeleportCollection = "host_teleport_collection",
    HostTimeCollection = "host_time_collection",
    HostWeatherCollection = "host_weather_collection",
    RealmsCollection = "realms_collection",
    CoinPurchaseGrid = "coin_purchase_grid",
    CommentCollection = "comment_collection",
    ContentLogMessage = "content_log_message",
    WorldList = "world_list",
    RealmList = "realm_list",
    TemplatesCollection = "templates_collection",
    FeedCollection = "feed_collection",
    BossBars = "boss_bars",
    ChatTextGrid = "chat_text_grid",
    HotbarItems = "hotbar_items",
    ScoreboardPlayers = "scoreboard_players",
    ScoreboardScores = "scoreboard_scores",
    LeftHelperCollection = "left_helper_collection",
    RightHelperCollection = "right_helper_collection",
    OnlinePlatformFriends = "online_platform_friends",
    OnlineLinkedAccountFriends = "online_linked_account_friends",
    OnlineXboxLiveFriends = "online_xbox_live_friends",
    OfflinePlatformFriends = "offline_platform_friends",
    OfflineLinkedAccountFriends = "offline_linked_account_friends",
    OfflineXboxLiveFriends = "offline_xbox_live_friends",
    ManageFeedCollection = "manage_feed_collection",
    PackErrors = "pack_errors",
    MobEffectsCollection = "mob_effects_collection",
    FactoryCollection = "factory_collection",
    RatingsStarCollection = "ratings_star_collection",
    PermissionsCollection = "permissions_collection",
    ColorCollection = "color_collection",
    SkinPackInGridItem = "skin_pack_in_grid_item",
    PersonaFeaturedSkinPackCollection = "persona_featured_skin_pack_collection",
    BodySizeCollection = "body_size_collection",
    ArmSizeCollection = "arm_size_collection",
    CategoryFeaturedCollection = "category_featured_collection",
    MainFeaturedCollection = "main_featured_collection",
    ProfileFeaturedCollection = "profile_featured_collection",
    CustomSectionCollection = "custom_section_collection",
    FeaturedCollection = "featured_collection",
    FoobarCollection = "foobar_collection",
    EmoteCollection = "emote_collection",
    FriendsNetworkWorlds = "friends_network_worlds",
    CrossPlatformFriendsNetworkWorlds = "cross_platform_friends_network_worlds",
    LanNetworkWorlds = "lan_network_worlds",
    FriendsRealms = "friends_realms",
    ServersNetworkWorlds = "servers_network_worlds",
    ThirdPartyServerNetworkWorlds = "third_party_server_network_worlds",
    ServerScreenshotCollection = "server_screenshot_collection",
    ServerGamesCollection = "server_games_collection",
    LocalWorlds = "local_worlds",
    LegacyWorlds = "legacy_worlds",
    BetaRetailLocalWorlds = "beta_retail_local_worlds",
    PersonalRealms = "personal_realms",
    LoadingPersonalRealms = "loading_personal_realms",
    LoadingFriendsRealms = "loading_friends_realms",
    Photos = "photos",
    RequiredResourcepacks = "required_resourcepacks",
    OptionalResourcepacks = "optional_resourcepacks",
    PendingInvitesCollection = "pending_invites_collection",
    AdditionalRealmsSubscriptionsCollection = "additional_realms_subscriptions_collection",
    RealmsBranchCollection = "realms_branch_collection",
    RealmsBackupCollection = "realms_backup_collection",
    MembersCollection = "members_collection",
    InvitedFriendsCollection = "invited_friends_collection",
    UninvitedFriendsCollection = "uninvited_friends_collection",
    BlockedPlayersCollection = "blocked_players_collection",
    ScreenshotpickerCollection = "screenshotpicker_collection",
    CustomForm = "custom_form",
    FormButtons = "form_buttons",
    CustomDropdown = "custom_dropdown",
    KeyboardStandardCollection = "keyboard_standard_collection",
    KeyboardFullCollection = "keyboard_full_collection",
    GamepadCollection = "gamepad_collection",
    Languages = "languages",
    RealmsPlusSubscriptionsCollection = "realms_plus_subscriptions_collection",
    SelectedPackItemsGlobal = "#selected_pack_items_global",
    AvailablePackItemsGlobal = "#available_pack_items_global",
    RealmsPackItemsGlobal = "#realms_pack_items_global",
    UnownedPackItemsGlobal = "#unowned_pack_items_global",
    InvalidPackItemsGlobal = "#invalid_pack_items_global",
    SelectedPackItemsLevel = "#selected_pack_items_level",
    AvailablePackItemsLevel = "#available_pack_items_level",
    RealmsPackItemsLevel = "#realms_pack_items_level",
    UnownedPackItemsLevel = "#unowned_pack_items_level",
    InvalidPackItemsLevel = "#invalid_pack_items_level",
    SelectedPackItemsAddon = "#selected_pack_items_addon",
    AvailablePackItemsAddon = "#available_pack_items_addon",
    RealmsPackItemsAddon = "#realms_pack_items_addon",
    UnownedPackItemsAddon = "#unowned_pack_items_addon",
    InvalidPackItemsAddon = "#invalid_pack_items_addon",
    ExperimentalToggles = "experimental_toggles",
    WorldPanel = "world_panel",
    WorldTemplatePanel = "world_template_panel",
    ResourcePanel = "resource_panel",
    BehaviorPanel = "behavior_panel",
    SkinPanel = "skin_panel",
    CachePanel = "cache_panel",
    DependentPacksPanel = "dependent_packs_panel",
    DependencyPanel = "dependency_panel",
    SaveSizeGrid = "save_size_grid",
    SaveOffsetGrid = "save_offset_grid",
    LoadOffsetGrid = "load_offset_grid",
    ExportSizeGrid = "export_size_grid",
    ExportOffsetGrid = "export_offset_grid",
    UgcItems = "ugc_items",
    WorldTemplates = "world_templates",
    RealmsPlusTemplates = "realms_plus_templates",
    CustomWorldTemplates = "custom_world_templates",
    SuggestedOffersCollection = "#suggested_offers_collection",
    AnvilInputItems = "anvil_input_items",
    AnvilMaterialItems = "anvil_material_items",
    AnvilResultItems = "anvil_result_items",
    BeaconPaymentItems = "beacon_payment_items",
    Speed = "speed",
    Haste = "haste",
    Resist = "resist",
    Jump = "jump",
    Strength = "strength",
    Regen = "regen",
    Extra = "extra",
    Confirm = "confirm",
    Cancel = "cancel",
    BrewingFuelItem = "brewing_fuel_item",
    BrewingInputItem = "brewing_input_item",
    BrewingResultItems = "brewing_result_items",
    CartographyInputItems = "cartography_input_items",
    CartographyAdditionalItems = "cartography_additional_items",
    CartographyResultItems = "cartography_result_items",
    EnchantingInputItems = "enchanting_input_items",
    EnchantingLapisItems = "enchanting_lapis_items",
    EnchantButtons = "#enchant_buttons",
    FurnaceIngredientItems = "furnace_ingredient_items",
    FurnaceFuelItems = "furnace_fuel_items",
    FurnaceOutputItems = "furnace_output_items",
    GrindstoneInputItems = "grindstone_input_items",
    GrindstoneAdditionalItems = "grindstone_additional_items",
    GrindstoneResultItems = "grindstone_result_items",
    HorseEquipItems = "horse_equip_items",
    ArmorItems = "armor_items",
    OffhandItems = "offhand_items",
    CraftingInputItems = "crafting_input_items",
    CraftingOutputItems = "crafting_output_items",
    RecipeBook = "recipe_book",
    LoomInputItems = "loom_input_items",
    LoomDyeItems = "loom_dye_items",
    LoomMaterialItems = "loom_material_items",
    LoomResultItems = "loom_result_items",
    Patterns = "patterns",
    SmithingTableInputItems = "smithing_table_input_items",
    SmithingTableMaterialItems = "smithing_table_material_items",
    SmithingTableResultItems = "smithing_table_result_items",
    StonecutterInputItems = "stonecutter_input_items",
    StonecutterResultItems = "stonecutter_result_items",
    Stones = "stones",
    Trade2Ingredient1Item = "trade2_ingredient1_item",
    Trade2Ingredient2Item = "trade2_ingredient2_item",
    Trade2ResultItem = "trade2_result_item",
    TradeItem1 = "trade_item_1",
    TradeItem2 = "trade_item_2",
    SellItem = "sell_item",
    Trades = "trades",
    TradeTiers = "trade_tiers",
}

export type ModifyObjectType = string | JsonUIElement | BindingInterface;